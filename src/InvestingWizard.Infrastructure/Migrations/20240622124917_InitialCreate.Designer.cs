// <auto-generated />
using System;
using System.Collections.Generic;
using InvestingWizard.Infrastructure.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InvestingWizard.Infrastructure.Migrations
{
    [DbContext(typeof(MainContext))]
    [Migration("20240622124917_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InvestingWizard.Domain.Companies.Company", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ExchangeCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Ticker")
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("InvestingWizard.Domain.Currencies.Currency", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("InvestingWizard.Domain.Exchanges.Exchange", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OperatingMIC")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TimeZone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("Exchanges");
                });

            modelBuilder.Entity("InvestingWizard.Domain.Exchanges.Holiday", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("ExchangeCode")
                        .HasColumnType("text");

                    b.Property<string>("HolidayType")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("character varying(21)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ExchangeCode");

                    b.ToTable("Holiday");

                    b.HasDiscriminator<string>("HolidayType").HasValue("RegularHoliday");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("InvestingWizard.Domain.Portfolios.Portfolio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Portfolios");
                });

            modelBuilder.Entity("InvestingWizard.Domain.Prices.Price", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AdjustedClose")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Close")
                        .HasColumnType("numeric");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("High")
                        .HasColumnType("numeric");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Low")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Open")
                        .HasColumnType("numeric");

                    b.Property<string>("SecurityCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Volume")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("InvestingWizard.Domain.Watchlists.Watchlist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("SecurityCodes")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Watchlists");
                });

            modelBuilder.Entity("InvestingWizard.Domain.Exchanges.EarlyCloseDay", b =>
                {
                    b.HasBaseType("InvestingWizard.Domain.Exchanges.Holiday");

                    b.Property<TimeOnly?>("CloseTime")
                        .HasColumnType("time without time zone");

                    b.HasDiscriminator().HasValue("EarlyCloseDay");
                });

            modelBuilder.Entity("InvestingWizard.Domain.Companies.Company", b =>
                {
                    b.OwnsOne("InvestingWizard.Domain.Companies.AnalystRatings", "AnalystRatings", b1 =>
                        {
                            b1.Property<string>("CompanyCode")
                                .HasColumnType("text");

                            b1.Property<int?>("Buy")
                                .HasColumnType("integer");

                            b1.Property<int?>("Hold")
                                .HasColumnType("integer");

                            b1.Property<decimal?>("Rating")
                                .HasColumnType("numeric");

                            b1.Property<int?>("Sell")
                                .HasColumnType("integer");

                            b1.Property<int?>("StrongBuy")
                                .HasColumnType("integer");

                            b1.Property<int?>("StrongSell")
                                .HasColumnType("integer");

                            b1.Property<decimal?>("TargetPrice")
                                .HasColumnType("numeric");

                            b1.HasKey("CompanyCode");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyCode");
                        });

                    b.OwnsOne("InvestingWizard.Domain.Companies.Earnings", "Earnings", b1 =>
                        {
                            b1.Property<string>("CompanyCode")
                                .HasColumnType("text");

                            b1.HasKey("CompanyCode");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyCode");

                            b1.OwnsMany("InvestingWizard.Domain.Companies.EarningsAnnual", "EarningsAnnuals", b2 =>
                                {
                                    b2.Property<string>("EarningsCompanyCode")
                                        .HasColumnType("text");

                                    b2.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uuid");

                                    b2.Property<DateOnly?>("Date")
                                        .HasColumnType("date");

                                    b2.Property<decimal?>("EpsActual")
                                        .HasColumnType("numeric");

                                    b2.HasKey("EarningsCompanyCode", "Id");

                                    b2.ToTable("EarningsAnnual");

                                    b2.WithOwner()
                                        .HasForeignKey("EarningsCompanyCode");
                                });

                            b1.OwnsMany("InvestingWizard.Domain.Companies.EarningsHistory", "EarningsHistories", b2 =>
                                {
                                    b2.Property<string>("EarningsCompanyCode")
                                        .HasColumnType("text");

                                    b2.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uuid");

                                    b2.Property<string>("BeforeAfterMarket")
                                        .HasColumnType("text");

                                    b2.Property<string>("CurrencyCode")
                                        .HasColumnType("text");

                                    b2.Property<DateOnly?>("Date")
                                        .HasColumnType("date");

                                    b2.Property<decimal?>("EpsActual")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal?>("EpsDifference")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal?>("EpsEstimate")
                                        .HasColumnType("numeric");

                                    b2.Property<DateOnly?>("ReportDate")
                                        .HasColumnType("date");

                                    b2.Property<decimal?>("SurprisePercent")
                                        .HasColumnType("numeric");

                                    b2.HasKey("EarningsCompanyCode", "Id");

                                    b2.ToTable("EarningsHistory");

                                    b2.WithOwner()
                                        .HasForeignKey("EarningsCompanyCode");
                                });

                            b1.OwnsMany("InvestingWizard.Domain.Companies.EarningsTrend", "EarningsTrends", b2 =>
                                {
                                    b2.Property<string>("EarningsCompanyCode")
                                        .HasColumnType("text");

                                    b2.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uuid");

                                    b2.Property<DateOnly?>("Date")
                                        .HasColumnType("date");

                                    b2.Property<decimal?>("EarningsEstimateAvg")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal?>("EarningsEstimateGrowth")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal?>("EarningsEstimateHigh")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal?>("EarningsEstimateLow")
                                        .HasColumnType("numeric");

                                    b2.Property<int?>("EarningsEstimateNumberOfAnalysts")
                                        .HasColumnType("integer");

                                    b2.Property<decimal?>("EarningsEstimateYearAgoEps")
                                        .HasColumnType("numeric");

                                    b2.Property<int?>("EpsRevisionsDownLast30days")
                                        .HasColumnType("integer");

                                    b2.Property<int?>("EpsRevisionsDownLast7days")
                                        .HasColumnType("integer");

                                    b2.Property<int?>("EpsRevisionsUpLast30days")
                                        .HasColumnType("integer");

                                    b2.Property<int?>("EpsRevisionsUpLast7days")
                                        .HasColumnType("integer");

                                    b2.Property<decimal?>("EpsTrend30daysAgo")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal?>("EpsTrend60daysAgo")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal?>("EpsTrend7daysAgo")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal?>("EpsTrend90daysAgo")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal?>("EpsTrendCurrent")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal?>("Growth")
                                        .HasColumnType("numeric");

                                    b2.Property<string>("Period")
                                        .HasColumnType("text");

                                    b2.Property<decimal?>("RevenueEstimateAvg")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal?>("RevenueEstimateGrowth")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal?>("RevenueEstimateHigh")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal?>("RevenueEstimateLow")
                                        .HasColumnType("numeric");

                                    b2.Property<int?>("RevenueEstimateNumberOfAnalysts")
                                        .HasColumnType("integer");

                                    b2.Property<decimal?>("RevenueEstimateYearAgoEps")
                                        .HasColumnType("numeric");

                                    b2.HasKey("EarningsCompanyCode", "Id");

                                    b2.ToTable("EarningsTrend");

                                    b2.WithOwner()
                                        .HasForeignKey("EarningsCompanyCode");
                                });

                            b1.Navigation("EarningsAnnuals");

                            b1.Navigation("EarningsHistories");

                            b1.Navigation("EarningsTrends");
                        });

                    b.OwnsOne("InvestingWizard.Domain.Companies.EsgScores", "EsgScores", b1 =>
                        {
                            b1.Property<string>("CompanyCode")
                                .HasColumnType("text");

                            b1.Property<int?>("ControversyLevel")
                                .HasColumnType("integer");

                            b1.Property<string>("Disclaimer")
                                .HasColumnType("text");

                            b1.Property<decimal?>("EnvironmentScore")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("EnvironmentScorePercentile")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("GovernanceScore")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("GovernanceScorePercentile")
                                .HasColumnType("numeric");

                            b1.Property<DateOnly?>("RatingDate")
                                .HasColumnType("date");

                            b1.Property<decimal?>("SocialScore")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("SocialScorePercentile")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("TotalEsg")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("TotalEsgPercentile")
                                .HasColumnType("numeric");

                            b1.HasKey("CompanyCode");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyCode");

                            b1.OwnsMany("InvestingWizard.Domain.Companies.ActivityInvolvement", "ActivitiesInvolvement", b2 =>
                                {
                                    b2.Property<string>("EsgScoresCompanyCode")
                                        .HasColumnType("text");

                                    b2.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Activity")
                                        .HasColumnType("text");

                                    b2.Property<string>("Involvement")
                                        .HasColumnType("text");

                                    b2.HasKey("EsgScoresCompanyCode", "Id");

                                    b2.ToTable("ActivityInvolvement");

                                    b2.WithOwner()
                                        .HasForeignKey("EsgScoresCompanyCode");
                                });

                            b1.Navigation("ActivitiesInvolvement");
                        });

                    b.OwnsOne("InvestingWizard.Domain.Companies.Financials", "Financials", b1 =>
                        {
                            b1.Property<string>("CompanyCode")
                                .HasColumnType("text");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uuid");

                            b1.HasKey("CompanyCode");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyCode");

                            b1.OwnsOne("InvestingWizard.Domain.Companies.BalanceSheetReport", "BalanceSheet", b2 =>
                                {
                                    b2.Property<string>("FinancialsCompanyCode")
                                        .HasColumnType("text");

                                    b2.Property<string>("CurrencyCode")
                                        .HasColumnType("text");

                                    b2.HasKey("FinancialsCompanyCode");

                                    b2.ToTable("Companies");

                                    b2.WithOwner()
                                        .HasForeignKey("FinancialsCompanyCode");

                                    b2.OwnsMany("InvestingWizard.Domain.Companies.BalanceSheet", "QuarterlyBalanceSheet", b3 =>
                                        {
                                            b3.Property<string>("BalanceSheetReportFinancialsCompanyCode")
                                                .HasColumnType("text");

                                            b3.Property<Guid>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("uuid");

                                            b3.Property<decimal?>("AccountsPayable")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("AccumulatedDepreciation")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("AdditionalPaCodeInCapital")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("CapitalStock")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("CapitalSurpluse")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("Cash")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("CashAndEquivalents")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("CashAndShortTermInvestments")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("CommonStock")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("CommonStockSharesOutstanding")
                                                .HasColumnType("numeric");

                                            b3.Property<string>("CurrencyCode")
                                                .HasColumnType("text");

                                            b3.Property<decimal?>("CurrentDeferredRevenue")
                                                .HasColumnType("numeric");

                                            b3.Property<DateOnly?>("Date")
                                                .HasColumnType("date");

                                            b3.Property<decimal?>("DeferredLongTermLiab")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("EarningAssets")
                                                .HasColumnType("numeric");

                                            b3.Property<DateOnly?>("FilingDate")
                                                .HasColumnType("date");

                                            b3.Property<decimal?>("GoodWill")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("IntangibleAssets")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("Inventory")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("LiabilitiesAndStockholdersEquity")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("LongTermDebt")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("LongTermInvestments")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("NegativeGoodwill")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("NetDebt")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("NetReceivables")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("NetTangibleAssets")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("NonCurrentAssetsTotal")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("NonCurrentLiabilitiesOther")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("NonCurrentLiabilitiesTotal")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("NonCurrrentAssetsOther")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("OtherAssets")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("OtherCurrentAssets")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("OtherCurrentLiab")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("OtherLiab")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("OtherStockholderEquity")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("PreferredStockRedeemable")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("PropertyPlantEquipment")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("RetainedEarnings")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("ShortLongTermDebt")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("ShortLongTermDebtTotal")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("ShortTermDebt")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("ShortTermInvestments")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("TotalAssets")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("TotalCurrentAssets")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("TotalCurrentLiabilities")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("TotalLiab")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("TotalPermanentEquity")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("TotalStockholderEquity")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("Warrants")
                                                .HasColumnType("numeric");

                                            b3.HasKey("BalanceSheetReportFinancialsCompanyCode", "Id");

                                            b3.ToTable("Companies_QuarterlyBalanceSheet");

                                            b3.WithOwner()
                                                .HasForeignKey("BalanceSheetReportFinancialsCompanyCode");
                                        });

                                    b2.OwnsMany("InvestingWizard.Domain.Companies.BalanceSheet", "YearlyBalanceSheet", b3 =>
                                        {
                                            b3.Property<string>("BalanceSheetReportFinancialsCompanyCode")
                                                .HasColumnType("text");

                                            b3.Property<Guid>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("uuid");

                                            b3.Property<decimal?>("AccountsPayable")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("AccumulatedDepreciation")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("AdditionalPaCodeInCapital")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("CapitalStock")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("CapitalSurpluse")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("Cash")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("CashAndEquivalents")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("CashAndShortTermInvestments")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("CommonStock")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("CommonStockSharesOutstanding")
                                                .HasColumnType("numeric");

                                            b3.Property<string>("CurrencyCode")
                                                .HasColumnType("text");

                                            b3.Property<decimal?>("CurrentDeferredRevenue")
                                                .HasColumnType("numeric");

                                            b3.Property<DateOnly?>("Date")
                                                .HasColumnType("date");

                                            b3.Property<decimal?>("DeferredLongTermLiab")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("EarningAssets")
                                                .HasColumnType("numeric");

                                            b3.Property<DateOnly?>("FilingDate")
                                                .HasColumnType("date");

                                            b3.Property<decimal?>("GoodWill")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("IntangibleAssets")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("Inventory")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("LiabilitiesAndStockholdersEquity")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("LongTermDebt")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("LongTermInvestments")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("NegativeGoodwill")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("NetDebt")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("NetReceivables")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("NetTangibleAssets")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("NonCurrentAssetsTotal")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("NonCurrentLiabilitiesOther")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("NonCurrentLiabilitiesTotal")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("NonCurrrentAssetsOther")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("OtherAssets")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("OtherCurrentAssets")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("OtherCurrentLiab")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("OtherLiab")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("OtherStockholderEquity")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("PreferredStockRedeemable")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("PropertyPlantEquipment")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("RetainedEarnings")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("ShortLongTermDebt")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("ShortLongTermDebtTotal")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("ShortTermDebt")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("ShortTermInvestments")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("TotalAssets")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("TotalCurrentAssets")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("TotalCurrentLiabilities")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("TotalLiab")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("TotalPermanentEquity")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("TotalStockholderEquity")
                                                .HasColumnType("numeric");

                                            b3.Property<decimal?>("Warrants")
                                                .HasColumnType("numeric");

                                            b3.HasKey("BalanceSheetReportFinancialsCompanyCode", "Id");

                                            b3.ToTable("Companies_YearlyBalanceSheet");

                                            b3.WithOwner()
                                                .HasForeignKey("BalanceSheetReportFinancialsCompanyCode");
                                        });

                                    b2.Navigation("QuarterlyBalanceSheet");

                                    b2.Navigation("YearlyBalanceSheet");
                                });

                            b1.OwnsOne("InvestingWizard.Domain.Companies.CashFlowReport", "CashFlow", b2 =>
                                {
                                    b2.Property<string>("FinancialsCompanyCode")
                                        .HasColumnType("text");

                                    b2.Property<string>("CurrencyCode")
                                        .HasColumnType("text");

                                    b2.HasKey("FinancialsCompanyCode");

                                    b2.ToTable("Companies");

                                    b2.WithOwner()
                                        .HasForeignKey("FinancialsCompanyCode");

                                    b2.OwnsMany("InvestingWizard.Domain.Companies.CashFlow", "QuarterlyCashFlow", b3 =>
                                        {
                                            b3.Property<string>("CashFlowReportFinancialsCompanyCode")
                                                .HasColumnType("text");

                                            b3.Property<Guid>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("uuid");

                                            b3.Property<string>("CapitalExpenditures")
                                                .HasColumnType("text");

                                            b3.Property<string>("ChangeInCash")
                                                .HasColumnType("text");

                                            b3.Property<string>("ChangeInWorkingCapital")
                                                .HasColumnType("text");

                                            b3.Property<string>("ChangeReceivables")
                                                .HasColumnType("text");

                                            b3.Property<string>("ChangeToAccountReceivables")
                                                .HasColumnType("text");

                                            b3.Property<string>("ChangeToInventory")
                                                .HasColumnType("text");

                                            b3.Property<string>("CurrencyCode")
                                                .HasColumnType("text");

                                            b3.Property<DateOnly?>("Date")
                                                .HasColumnType("date");

                                            b3.Property<string>("Depreciation")
                                                .HasColumnType("text");

                                            b3.Property<string>("DividendsPaCode")
                                                .HasColumnType("text");

                                            b3.Property<DateOnly?>("FilingDate")
                                                .HasColumnType("date");

                                            b3.Property<string>("FreeCashFlow")
                                                .HasColumnType("text");

                                            b3.Property<string>("Investments")
                                                .HasColumnType("text");

                                            b3.Property<string>("NetIncome")
                                                .HasColumnType("text");

                                            b3.Property<string>("OtherCashflowsFromFinancingActivities")
                                                .HasColumnType("text");

                                            b3.Property<string>("OtherNonCashItems")
                                                .HasColumnType("text");

                                            b3.Property<string>("SalePurchaseOfStock")
                                                .HasColumnType("text");

                                            b3.Property<string>("StockBasedCompensation")
                                                .HasColumnType("text");

                                            b3.Property<string>("TotalCashFromFinancingActivities")
                                                .HasColumnType("text");

                                            b3.Property<string>("TotalCashFromOperatingActivities")
                                                .HasColumnType("text");

                                            b3.HasKey("CashFlowReportFinancialsCompanyCode", "Id");

                                            b3.ToTable("Companies_QuarterlyCashFlow");

                                            b3.WithOwner()
                                                .HasForeignKey("CashFlowReportFinancialsCompanyCode");
                                        });

                                    b2.OwnsMany("InvestingWizard.Domain.Companies.CashFlow", "YearlyCashFlow", b3 =>
                                        {
                                            b3.Property<string>("CashFlowReportFinancialsCompanyCode")
                                                .HasColumnType("text");

                                            b3.Property<Guid>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("uuid");

                                            b3.Property<string>("CapitalExpenditures")
                                                .HasColumnType("text");

                                            b3.Property<string>("ChangeInCash")
                                                .HasColumnType("text");

                                            b3.Property<string>("ChangeInWorkingCapital")
                                                .HasColumnType("text");

                                            b3.Property<string>("ChangeReceivables")
                                                .HasColumnType("text");

                                            b3.Property<string>("ChangeToAccountReceivables")
                                                .HasColumnType("text");

                                            b3.Property<string>("ChangeToInventory")
                                                .HasColumnType("text");

                                            b3.Property<string>("CurrencyCode")
                                                .HasColumnType("text");

                                            b3.Property<DateOnly?>("Date")
                                                .HasColumnType("date");

                                            b3.Property<string>("Depreciation")
                                                .HasColumnType("text");

                                            b3.Property<string>("DividendsPaCode")
                                                .HasColumnType("text");

                                            b3.Property<DateOnly?>("FilingDate")
                                                .HasColumnType("date");

                                            b3.Property<string>("FreeCashFlow")
                                                .HasColumnType("text");

                                            b3.Property<string>("Investments")
                                                .HasColumnType("text");

                                            b3.Property<string>("NetIncome")
                                                .HasColumnType("text");

                                            b3.Property<string>("OtherCashflowsFromFinancingActivities")
                                                .HasColumnType("text");

                                            b3.Property<string>("OtherNonCashItems")
                                                .HasColumnType("text");

                                            b3.Property<string>("SalePurchaseOfStock")
                                                .HasColumnType("text");

                                            b3.Property<string>("StockBasedCompensation")
                                                .HasColumnType("text");

                                            b3.Property<string>("TotalCashFromFinancingActivities")
                                                .HasColumnType("text");

                                            b3.Property<string>("TotalCashFromOperatingActivities")
                                                .HasColumnType("text");

                                            b3.HasKey("CashFlowReportFinancialsCompanyCode", "Id");

                                            b3.ToTable("Companies_YearlyCashFlow");

                                            b3.WithOwner()
                                                .HasForeignKey("CashFlowReportFinancialsCompanyCode");
                                        });

                                    b2.Navigation("QuarterlyCashFlow");

                                    b2.Navigation("YearlyCashFlow");
                                });

                            b1.OwnsOne("InvestingWizard.Domain.Companies.IncomeStatementReport", "IncomeStatement", b2 =>
                                {
                                    b2.Property<string>("FinancialsCompanyCode")
                                        .HasColumnType("text");

                                    b2.Property<string>("CurrencyCode")
                                        .HasColumnType("text");

                                    b2.HasKey("FinancialsCompanyCode");

                                    b2.ToTable("Companies");

                                    b2.WithOwner()
                                        .HasForeignKey("FinancialsCompanyCode");

                                    b2.OwnsMany("InvestingWizard.Domain.Companies.IncomeStatement", "QuarterlyIncomeStatement", b3 =>
                                        {
                                            b3.Property<string>("IncomeStatementReportFinancialsCompanyCode")
                                                .HasColumnType("text");

                                            b3.Property<Guid>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("uuid");

                                            b3.Property<string>("CostOfRevenue")
                                                .HasColumnType("text");

                                            b3.Property<string>("CurrencyCode")
                                                .HasColumnType("text");

                                            b3.Property<DateOnly?>("Date")
                                                .HasColumnType("date");

                                            b3.Property<string>("DepreciationAndAmortization")
                                                .HasColumnType("text");

                                            b3.Property<string>("EBIT")
                                                .HasColumnType("text");

                                            b3.Property<string>("EBITDA")
                                                .HasColumnType("text");

                                            b3.Property<DateOnly?>("FilingDate")
                                                .HasColumnType("date");

                                            b3.Property<string>("GrossProfit")
                                                .HasColumnType("text");

                                            b3.Property<string>("IncomeBeforeTax")
                                                .HasColumnType("text");

                                            b3.Property<string>("IncomeTaxExpense")
                                                .HasColumnType("text");

                                            b3.Property<string>("NetIncome")
                                                .HasColumnType("text");

                                            b3.Property<string>("NetIncomeFromContinuingOps")
                                                .HasColumnType("text");

                                            b3.Property<string>("OperatingIncome")
                                                .HasColumnType("text");

                                            b3.Property<string>("OtherOperatingExpenses")
                                                .HasColumnType("text");

                                            b3.Property<string>("ResearchDevelopment")
                                                .HasColumnType("text");

                                            b3.Property<string>("SellingGeneralAdministrative")
                                                .HasColumnType("text");

                                            b3.Property<string>("TaxProvision")
                                                .HasColumnType("text");

                                            b3.Property<string>("TotalOperatingExpenses")
                                                .HasColumnType("text");

                                            b3.Property<string>("TotalOtherIncomeExpenseNet")
                                                .HasColumnType("text");

                                            b3.Property<string>("TotalRevenue")
                                                .HasColumnType("text");

                                            b3.HasKey("IncomeStatementReportFinancialsCompanyCode", "Id");

                                            b3.ToTable("Companies_QuarterlyIncomeStatement");

                                            b3.WithOwner()
                                                .HasForeignKey("IncomeStatementReportFinancialsCompanyCode");
                                        });

                                    b2.OwnsMany("InvestingWizard.Domain.Companies.IncomeStatement", "YearlyIncomeStatement", b3 =>
                                        {
                                            b3.Property<string>("IncomeStatementReportFinancialsCompanyCode")
                                                .HasColumnType("text");

                                            b3.Property<Guid>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("uuid");

                                            b3.Property<string>("CostOfRevenue")
                                                .HasColumnType("text");

                                            b3.Property<string>("CurrencyCode")
                                                .HasColumnType("text");

                                            b3.Property<DateOnly?>("Date")
                                                .HasColumnType("date");

                                            b3.Property<string>("DepreciationAndAmortization")
                                                .HasColumnType("text");

                                            b3.Property<string>("EBIT")
                                                .HasColumnType("text");

                                            b3.Property<string>("EBITDA")
                                                .HasColumnType("text");

                                            b3.Property<DateOnly?>("FilingDate")
                                                .HasColumnType("date");

                                            b3.Property<string>("GrossProfit")
                                                .HasColumnType("text");

                                            b3.Property<string>("IncomeBeforeTax")
                                                .HasColumnType("text");

                                            b3.Property<string>("IncomeTaxExpense")
                                                .HasColumnType("text");

                                            b3.Property<string>("NetIncome")
                                                .HasColumnType("text");

                                            b3.Property<string>("NetIncomeFromContinuingOps")
                                                .HasColumnType("text");

                                            b3.Property<string>("OperatingIncome")
                                                .HasColumnType("text");

                                            b3.Property<string>("OtherOperatingExpenses")
                                                .HasColumnType("text");

                                            b3.Property<string>("ResearchDevelopment")
                                                .HasColumnType("text");

                                            b3.Property<string>("SellingGeneralAdministrative")
                                                .HasColumnType("text");

                                            b3.Property<string>("TaxProvision")
                                                .HasColumnType("text");

                                            b3.Property<string>("TotalOperatingExpenses")
                                                .HasColumnType("text");

                                            b3.Property<string>("TotalOtherIncomeExpenseNet")
                                                .HasColumnType("text");

                                            b3.Property<string>("TotalRevenue")
                                                .HasColumnType("text");

                                            b3.HasKey("IncomeStatementReportFinancialsCompanyCode", "Id");

                                            b3.ToTable("Companies_YearlyIncomeStatement");

                                            b3.WithOwner()
                                                .HasForeignKey("IncomeStatementReportFinancialsCompanyCode");
                                        });

                                    b2.Navigation("QuarterlyIncomeStatement");

                                    b2.Navigation("YearlyIncomeStatement");
                                });

                            b1.Navigation("BalanceSheet");

                            b1.Navigation("CashFlow");

                            b1.Navigation("IncomeStatement");
                        });

                    b.OwnsOne("InvestingWizard.Domain.Companies.GeneralInformation", "GeneralInformation", b1 =>
                        {
                            b1.Property<string>("CompanyCode")
                                .HasColumnType("text");

                            b1.Property<string>("Address")
                                .HasColumnType("text");

                            b1.Property<string>("CIK")
                                .HasColumnType("text");

                            b1.Property<string>("CUSIP")
                                .HasColumnType("text");

                            b1.Property<string>("CeoName")
                                .HasColumnType("text");

                            b1.Property<string>("CountryISO")
                                .HasColumnType("text");

                            b1.Property<string>("CountryName")
                                .HasColumnType("text");

                            b1.Property<string>("CurrencyCode")
                                .HasColumnType("text");

                            b1.Property<string>("Description")
                                .HasColumnType("text");

                            b1.Property<string>("EmployerCodeNumber")
                                .HasColumnType("text");

                            b1.Property<string>("FiscalYearEnd")
                                .HasColumnType("text");

                            b1.Property<int?>("FullTimeEmployees")
                                .HasColumnType("integer");

                            b1.Property<string>("GicGroup")
                                .HasColumnType("text");

                            b1.Property<string>("GicIndustry")
                                .HasColumnType("text");

                            b1.Property<string>("GicSector")
                                .HasColumnType("text");

                            b1.Property<string>("GicSubIndustry")
                                .HasColumnType("text");

                            b1.Property<string>("HeadquartersCountry")
                                .HasColumnType("text");

                            b1.Property<string>("HomeCategory")
                                .HasColumnType("text");

                            b1.Property<DateOnly?>("IPODate")
                                .HasColumnType("date");

                            b1.Property<string>("ISIN")
                                .HasColumnType("text");

                            b1.Property<string>("Industry")
                                .HasColumnType("text");

                            b1.Property<string>("InternationalDomestic")
                                .HasColumnType("text");

                            b1.Property<bool?>("IsDelisted")
                                .HasColumnType("boolean");

                            b1.Property<string>("LEI")
                                .HasColumnType("text");

                            b1.Property<string>("LogoURL")
                                .HasColumnType("text");

                            b1.Property<string>("OpenFigi")
                                .HasColumnType("text");

                            b1.Property<string>("Phone")
                                .HasColumnType("text");

                            b1.Property<string>("PrimaryTicker")
                                .HasColumnType("text");

                            b1.Property<string>("Sector")
                                .HasColumnType("text");

                            b1.Property<string>("Type")
                                .HasColumnType("text");

                            b1.Property<string>("WebURL")
                                .HasColumnType("text");

                            b1.HasKey("CompanyCode");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyCode");
                        });

                    b.OwnsOne("InvestingWizard.Domain.Companies.Highlights", "Highlights", b1 =>
                        {
                            b1.Property<string>("CompanyCode")
                                .HasColumnType("text");

                            b1.Property<decimal?>("BookValue")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("DilutedEpsTTM")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("DividendShare")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("DividendYield")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("EBITDA")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("EPSEstimateCurrentQuarter")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("EPSEstimateCurrentYear")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("EPSEstimateNextQuarter")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("EPSEstimateNextYear")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("EarningsShare")
                                .HasColumnType("numeric");

                            b1.Property<long?>("GrossProfitTTM")
                                .HasColumnType("bigint");

                            b1.Property<long?>("MarketCapitalization")
                                .HasColumnType("bigint");

                            b1.Property<decimal?>("MarketCapitalizationMln")
                                .HasColumnType("numeric");

                            b1.Property<DateOnly?>("MostRecentQuarter")
                                .HasColumnType("date");

                            b1.Property<decimal?>("OperatingMarginTTM")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("PEGRatio")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("PERatio")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("ProfitMargin")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("QuarterlyEarningsGrowthYOY")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("QuarterlyRevenueGrowthYOY")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("ReturnOnAssetsTTM")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("ReturnOnEquityTTM")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("RevenuePerShareTTM")
                                .HasColumnType("numeric");

                            b1.Property<long?>("RevenueTTM")
                                .HasColumnType("bigint");

                            b1.Property<decimal?>("WallStreetTargetPrice")
                                .HasColumnType("numeric");

                            b1.HasKey("CompanyCode");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyCode");
                        });

                    b.OwnsOne("InvestingWizard.Domain.Companies.Holders", "Holders", b1 =>
                        {
                            b1.Property<string>("CompanyCode")
                                .HasColumnType("text");

                            b1.HasKey("CompanyCode");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyCode");

                            b1.OwnsMany("InvestingWizard.Domain.Companies.Holder", "Funds", b2 =>
                                {
                                    b2.Property<string>("HoldersCompanyCode")
                                        .HasColumnType("text");

                                    b2.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uuid");

                                    b2.Property<long?>("Change")
                                        .HasColumnType("bigint");

                                    b2.Property<decimal?>("ChangePercentage")
                                        .HasColumnType("numeric");

                                    b2.Property<long?>("CurrentShares")
                                        .HasColumnType("bigint");

                                    b2.Property<DateOnly?>("Date")
                                        .HasColumnType("date");

                                    b2.Property<string>("Name")
                                        .HasColumnType("text");

                                    b2.Property<decimal?>("TotalAssets")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal?>("TotalShares")
                                        .HasColumnType("numeric");

                                    b2.HasKey("HoldersCompanyCode", "Id");

                                    b2.ToTable("Companies_Funds");

                                    b2.WithOwner()
                                        .HasForeignKey("HoldersCompanyCode");
                                });

                            b1.OwnsMany("InvestingWizard.Domain.Companies.Holder", "Institutions", b2 =>
                                {
                                    b2.Property<string>("HoldersCompanyCode")
                                        .HasColumnType("text");

                                    b2.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uuid");

                                    b2.Property<long?>("Change")
                                        .HasColumnType("bigint");

                                    b2.Property<decimal?>("ChangePercentage")
                                        .HasColumnType("numeric");

                                    b2.Property<long?>("CurrentShares")
                                        .HasColumnType("bigint");

                                    b2.Property<DateOnly?>("Date")
                                        .HasColumnType("date");

                                    b2.Property<string>("Name")
                                        .HasColumnType("text");

                                    b2.Property<decimal?>("TotalAssets")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal?>("TotalShares")
                                        .HasColumnType("numeric");

                                    b2.HasKey("HoldersCompanyCode", "Id");

                                    b2.ToTable("Companies_Institutions");

                                    b2.WithOwner()
                                        .HasForeignKey("HoldersCompanyCode");
                                });

                            b1.Navigation("Funds");

                            b1.Navigation("Institutions");
                        });

                    b.OwnsOne("InvestingWizard.Domain.Companies.InsiderTransactions", "InsiderTransactions", b1 =>
                        {
                            b1.Property<string>("CompanyCode")
                                .HasColumnType("text");

                            b1.HasKey("CompanyCode");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyCode");

                            b1.OwnsMany("InvestingWizard.Domain.Companies.InsiderTransaction", "Transactions", b2 =>
                                {
                                    b2.Property<string>("InsiderTransactionsCompanyCode")
                                        .HasColumnType("text");

                                    b2.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uuid");

                                    b2.Property<string>("OwnerName")
                                        .HasColumnType("text");

                                    b2.Property<long?>("PostTransactionAmount")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("SecLink")
                                        .HasColumnType("text");

                                    b2.Property<long?>("TransactionAmount")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("TransactionCode")
                                        .HasColumnType("text");

                                    b2.Property<DateOnly?>("TransactionDate")
                                        .HasColumnType("date");

                                    b2.Property<decimal?>("TransactionPrice")
                                        .HasColumnType("numeric");

                                    b2.Property<string>("TransactionType")
                                        .HasColumnType("text");

                                    b2.HasKey("InsiderTransactionsCompanyCode", "Id");

                                    b2.ToTable("InsiderTransaction");

                                    b2.WithOwner()
                                        .HasForeignKey("InsiderTransactionsCompanyCode");
                                });

                            b1.Navigation("Transactions");
                        });

                    b.OwnsOne("InvestingWizard.Domain.Companies.OutstandingShares", "OutstandingShares", b1 =>
                        {
                            b1.Property<string>("CompanyCode")
                                .HasColumnType("text");

                            b1.HasKey("CompanyCode");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyCode");

                            b1.OwnsMany("InvestingWizard.Domain.Companies.OutstandingShare", "AnnualShares", b2 =>
                                {
                                    b2.Property<string>("OutstandingSharesCompanyCode")
                                        .HasColumnType("text");

                                    b2.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uuid");

                                    b2.Property<DateOnly?>("DateFormatted")
                                        .HasColumnType("date");

                                    b2.Property<decimal?>("Shares")
                                        .HasColumnType("numeric");

                                    b2.Property<string>("SharesMln")
                                        .HasColumnType("text");

                                    b2.Property<string>("Year")
                                        .HasColumnType("text");

                                    b2.HasKey("OutstandingSharesCompanyCode", "Id");

                                    b2.ToTable("Companies_AnnualShares");

                                    b2.WithOwner()
                                        .HasForeignKey("OutstandingSharesCompanyCode");
                                });

                            b1.OwnsMany("InvestingWizard.Domain.Companies.OutstandingShare", "QuarterlyShares", b2 =>
                                {
                                    b2.Property<string>("OutstandingSharesCompanyCode")
                                        .HasColumnType("text");

                                    b2.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uuid");

                                    b2.Property<DateOnly?>("DateFormatted")
                                        .HasColumnType("date");

                                    b2.Property<decimal?>("Shares")
                                        .HasColumnType("numeric");

                                    b2.Property<string>("SharesMln")
                                        .HasColumnType("text");

                                    b2.Property<string>("Year")
                                        .HasColumnType("text");

                                    b2.HasKey("OutstandingSharesCompanyCode", "Id");

                                    b2.ToTable("Companies_QuarterlyShares");

                                    b2.WithOwner()
                                        .HasForeignKey("OutstandingSharesCompanyCode");
                                });

                            b1.Navigation("AnnualShares");

                            b1.Navigation("QuarterlyShares");
                        });

                    b.OwnsOne("InvestingWizard.Domain.Companies.SharesStats", "SharesStats", b1 =>
                        {
                            b1.Property<string>("CompanyCode")
                                .HasColumnType("text");

                            b1.Property<decimal?>("PercentInsiders")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("PercentInstitutions")
                                .HasColumnType("numeric");

                            b1.Property<long?>("SharesFloat")
                                .HasColumnType("bigint");

                            b1.Property<long?>("SharesOutstanding")
                                .HasColumnType("bigint");

                            b1.Property<long?>("SharesShort")
                                .HasColumnType("bigint");

                            b1.Property<long?>("SharesShortPriorMonth")
                                .HasColumnType("bigint");

                            b1.Property<decimal?>("ShortPercentFloat")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("ShortPercentOutstanding")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("ShortRatio")
                                .HasColumnType("numeric");

                            b1.HasKey("CompanyCode");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyCode");
                        });

                    b.OwnsOne("InvestingWizard.Domain.Companies.SplitsDividends", "SplitsDividends", b1 =>
                        {
                            b1.Property<string>("CompanyCode")
                                .HasColumnType("text");

                            b1.Property<DateOnly?>("DividendDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly?>("ExDividendDate")
                                .HasColumnType("date");

                            b1.Property<decimal?>("ForwardAnnualDividendRate")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("ForwardAnnualDividendYield")
                                .HasColumnType("numeric");

                            b1.Property<DateOnly?>("LastSplitDate")
                                .HasColumnType("date");

                            b1.Property<string>("LastSplitFactor")
                                .HasColumnType("text");

                            b1.Property<decimal?>("PayoutRatio")
                                .HasColumnType("numeric");

                            b1.HasKey("CompanyCode");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyCode");
                        });

                    b.OwnsOne("InvestingWizard.Domain.Companies.Technicals", "Technicals", b1 =>
                        {
                            b1.Property<string>("CompanyCode")
                                .HasColumnType("text");

                            b1.Property<decimal?>("Beta")
                                .HasColumnType("numeric");

                            b1.Property<long?>("SharesShort")
                                .HasColumnType("bigint");

                            b1.Property<long?>("SharesShortPriorMonth")
                                .HasColumnType("bigint");

                            b1.Property<decimal?>("ShortPercent")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("ShortPercentFloat")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("ShortPercentOutstanding")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("ShortRatio")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("_200DayMA")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("_50DayMA")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("_52WeekHigh")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("_52WeekLow")
                                .HasColumnType("numeric");

                            b1.HasKey("CompanyCode");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyCode");
                        });

                    b.OwnsOne("InvestingWizard.Domain.Companies.Valuation", "Valuation", b1 =>
                        {
                            b1.Property<string>("CompanyCode")
                                .HasColumnType("text");

                            b1.Property<long?>("EnterpriseValue")
                                .HasColumnType("bigint");

                            b1.Property<decimal?>("EnterpriseValueEbitda")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("EnterpriseValueRevenue")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("ForwardPE")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("PriceBookMRQ")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("PriceSalesTTM")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("TrailingPE")
                                .HasColumnType("numeric");

                            b1.HasKey("CompanyCode");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyCode");
                        });

                    b.Navigation("AnalystRatings");

                    b.Navigation("Earnings");

                    b.Navigation("EsgScores");

                    b.Navigation("Financials");

                    b.Navigation("GeneralInformation");

                    b.Navigation("Highlights");

                    b.Navigation("Holders");

                    b.Navigation("InsiderTransactions");

                    b.Navigation("OutstandingShares");

                    b.Navigation("SharesStats");

                    b.Navigation("SplitsDividends");

                    b.Navigation("Technicals");

                    b.Navigation("Valuation");
                });

            modelBuilder.Entity("InvestingWizard.Domain.Exchanges.Exchange", b =>
                {
                    b.OwnsOne("InvestingWizard.Domain.Exchanges.TradingHours", "TradingHours", b1 =>
                        {
                            b1.Property<string>("ExchangeCode")
                                .HasColumnType("text");

                            b1.Property<TimeOnly?>("Close")
                                .HasColumnType("time without time zone");

                            b1.Property<TimeOnly?>("CloseUtc")
                                .HasColumnType("time without time zone");

                            b1.Property<TimeOnly?>("Open")
                                .HasColumnType("time without time zone");

                            b1.Property<TimeOnly?>("OpenUtc")
                                .HasColumnType("time without time zone");

                            b1.Property<List<string>>("WorkingDays")
                                .HasColumnType("text[]");

                            b1.HasKey("ExchangeCode");

                            b1.ToTable("Exchanges");

                            b1.WithOwner()
                                .HasForeignKey("ExchangeCode");
                        });

                    b.Navigation("TradingHours")
                        .IsRequired();
                });

            modelBuilder.Entity("InvestingWizard.Domain.Exchanges.Holiday", b =>
                {
                    b.HasOne("InvestingWizard.Domain.Exchanges.Exchange", null)
                        .WithMany("Holidays")
                        .HasForeignKey("ExchangeCode");
                });

            modelBuilder.Entity("InvestingWizard.Domain.Portfolios.Portfolio", b =>
                {
                    b.OwnsMany("InvestingWizard.Domain.Portfolios.PortfolioEntry", "PortfolioEntries", b1 =>
                        {
                            b1.Property<Guid>("PortfolioId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uuid");

                            b1.Property<decimal>("AverageUnitPrice")
                                .HasColumnType("numeric");

                            b1.Property<string>("CreatedBy")
                                .HasColumnType("text");

                            b1.Property<DateTime?>("CreatedDate")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("CurrencyCode")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("LastModifiedBy")
                                .HasColumnType("text");

                            b1.Property<DateTime?>("LastModifiedDate")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("SecurityCode")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<decimal>("TotalUnits")
                                .HasColumnType("numeric");

                            b1.HasKey("PortfolioId", "Id");

                            b1.ToTable("PortfolioEntry");

                            b1.WithOwner()
                                .HasForeignKey("PortfolioId");
                        });

                    b.OwnsMany("InvestingWizard.Domain.Portfolios.Transaction", "Transactions", b1 =>
                        {
                            b1.Property<Guid>("PortfolioId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("AmountInUserCurrency")
                                .HasColumnType("numeric");

                            b1.Property<bool>("BrokerIsResident")
                                .HasColumnType("boolean");

                            b1.Property<string>("CreatedBy")
                                .HasColumnType("text");

                            b1.Property<DateTime?>("CreatedDate")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateOnly>("Date")
                                .HasColumnType("date");

                            b1.Property<string>("LastModifiedBy")
                                .HasColumnType("text");

                            b1.Property<DateTime?>("LastModifiedDate")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("SecurityCode")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("TransactionCurrencyCode")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<decimal>("UnitPrice")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Units")
                                .HasColumnType("numeric");

                            b1.Property<string>("UserCurrencyCode")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("PortfolioId", "Id");

                            b1.ToTable("Transaction");

                            b1.WithOwner()
                                .HasForeignKey("PortfolioId");
                        });

                    b.Navigation("PortfolioEntries");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("InvestingWizard.Domain.Exchanges.Exchange", b =>
                {
                    b.Navigation("Holidays");
                });
#pragma warning restore 612, 618
        }
    }
}
